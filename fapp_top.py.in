import argparse
import json
from collections import OrderedDict
from importlib import reload

import fapp_loader


def add_path(path: list[str], key: str, value, results: OrderedDict):
    cur_dict = results
    for p in path:
        if p not in cur_dict:
            cur_dict[p] = OrderedDict()
        cur_dict = cur_dict[p]
    cur_dict[key] = value


def xls_nonempty(ops: list):
    return [e for e in ops if e != ""]


def xls_sum(ops: list):
    return sum(map(lambda t: float(t) if t != "" else 0, ops))


def vba_guard_limit_lower(data, flag: float, lower_limit: float = 1):
    try:
        ddata = float(data)
    except Exception():
        return data
    if flag == 0:
        if ddata < lower_limit:
            ddata = lower_limit
    return ddata


def vba_guard_limit_upper(data, flag: float, upper_limit: float = 1):
    try:
        ddata = float(data)
    except Exception():
        return data
    if flag == 0:
        if ddata > upper_limit:
            ddata = upper_limit
    return ddata


parser = argparse.ArgumentParser()
parser.add_argument(
    "input_xml_dir",
    help="Path to a directory containing paN.xml files generated using `fapp -txml`",
)
args = parser.parse_args()

fapp_xml = fapp_loader.FappXml(args.input_xml_dir)
results = OrderedDict()

### TOP END ###
